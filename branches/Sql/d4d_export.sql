/* Generated by Web Data Administrator on 2009-10-7 22:44:28 */

/* Options selected: table-schema table-data stored-procedures comments  */


use [d4d]
GO

/****** Object:  Table [dbo].[Accounts_PermissionCategories]    Script Date: 2009-10-7 22:44:28 ******/
CREATE TABLE [Accounts_PermissionCategories] (
	[CategoryID] [int] IDENTITY (1, 1) NOT NULL ,
	[Description] [varchar] (255) COLLATE Chinese_PRC_CI_AS NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[Accounts_Permissions]    Script Date: 2009-10-7 22:44:29 ******/
CREATE TABLE [Accounts_Permissions] (
	[PermissionID] [int] IDENTITY (1, 1) NOT NULL ,
	[Description] [varchar] (255) COLLATE Chinese_PRC_CI_AS NULL ,
	[CategoryID] [int] NULL ,
	[Url] [varchar] (50) COLLATE Chinese_PRC_CI_AS NOT NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[Accounts_RolePermissions]    Script Date: 2009-10-7 22:44:29 ******/
CREATE TABLE [Accounts_RolePermissions] (
	[RoleID] [int] NOT NULL ,
	[PermissionID] [int] NOT NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[Accounts_Roles]    Script Date: 2009-10-7 22:44:29 ******/
CREATE TABLE [Accounts_Roles] (
	[RoleID] [int] IDENTITY (1, 1) NOT NULL ,
	[Description] [varchar] (255) COLLATE Chinese_PRC_CI_AS NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[Accounts_UserRoles]    Script Date: 2009-10-7 22:44:29 ******/
CREATE TABLE [Accounts_UserRoles] (
	[UserID] [int] NOT NULL ,
	[RoleID] [int] NOT NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[Accounts_Users]    Script Date: 2009-10-7 22:44:29 ******/
CREATE TABLE [Accounts_Users] (
	[UserID] [int] IDENTITY (1, 1) NOT NULL ,
	[UserName] [varchar] (50) COLLATE Chinese_PRC_CI_AS NOT NULL ,
	[Password] [binary] (20) NOT NULL ,
	[TrueName] [varchar] (50) COLLATE Chinese_PRC_CI_AS NULL ,
	[Sex] [char] (2) COLLATE Chinese_PRC_CI_AS NULL ,
	[Phone] [varchar] (20) COLLATE Chinese_PRC_CI_AS NULL ,
	[Email] [varchar] (100) COLLATE Chinese_PRC_CI_AS NULL ,
	[EmployeeID] [int] NULL ,
	[DepartmentID] [varchar] (15) COLLATE Chinese_PRC_CI_AS NULL ,
	[Activity] [bit] NULL ,
	[UserType] [char] (2) COLLATE Chinese_PRC_CI_AS NULL ,
	[Style] [int] NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[comment]    Script Date: 2009-10-7 22:44:30 ******/
CREATE TABLE [comment] (
	[Id] [int] IDENTITY (1, 1) NOT NULL ,
	[UserId] [int] NULL ,
	[NewsId] [int] NULL ,
	[Detail] [nvarchar] (0) COLLATE Chinese_PRC_CI_AS NULL ,
	[AddDate] [datetime] NOT NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[image]    Script Date: 2009-10-7 22:44:30 ******/
CREATE TABLE [image] (
	[Id] [int] IDENTITY (1, 1) NOT NULL ,
	[AlbumId] [int] NOT NULL ,
	[Url] [varchar] (50) COLLATE Chinese_PRC_CI_AS NULL ,
	[AddDate] [datetime] NOT NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[media]    Script Date: 2009-10-7 22:44:30 ******/
CREATE TABLE [media] (
	[Id] [int] IDENTITY (1, 1) NOT NULL ,
	[Name] [nvarchar] (200) COLLATE Chinese_PRC_CI_AS NOT NULL ,
	[NewsId] [int] NOT NULL ,
	[URL] [varchar] (200) COLLATE Chinese_PRC_CI_AS NULL ,
	[AddDate] [datetime] NOT NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[news]    Script Date: 2009-10-7 22:44:30 ******/
CREATE TABLE [news] (
	[Id] [int] IDENTITY (1, 1) NOT NULL ,
	[Title] [nvarchar] (200) COLLATE Chinese_PRC_CI_AS NOT NULL ,
	[Detail] [nvarchar] (0) COLLATE Chinese_PRC_CI_AS NULL ,
	[Preview] [nvarchar] (3000) COLLATE Chinese_PRC_CI_AS NULL ,
	[AddDate] [datetime] NOT NULL ,
	[NewType] [int] NULL ,
	[Publish] [bit] NOT NULL ,
	[Hits] [int] NOT NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[news_tag]    Script Date: 2009-10-7 22:44:30 ******/
CREATE TABLE [news_tag] (
	[Id] [int] IDENTITY (1, 1) NOT NULL ,
	[NewsId] [int] NOT NULL ,
	[TagId] [int] NOT NULL ,
	[AddDate] [datetime] NOT NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[news_type]    Script Date: 2009-10-7 22:44:30 ******/
CREATE TABLE [news_type] (
	[Id] [int] IDENTITY (1, 1) NOT NULL ,
	[Name] [nvarchar] (200) COLLATE Chinese_PRC_CI_AS NOT NULL ,
	[Type] [int] NOT NULL ,
	[Parent] [int] NOT NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[photo_album]    Script Date: 2009-10-7 22:44:30 ******/
CREATE TABLE [photo_album] (
	[Id] [int] IDENTITY (1, 1) NOT NULL ,
	[Name] [nvarchar] (50) COLLATE Chinese_PRC_CI_AS NULL ,
	[PicSmall] [varchar] (50) COLLATE Chinese_PRC_CI_AS NULL ,
	[PicBig] [varchar] (50) COLLATE Chinese_PRC_CI_AS NULL ,
	[AddDate] [datetime] NULL ,
	[Publish] [bit] NOT NULL ,
	[TotalCount] [int] NOT NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[sysdiagrams]    Script Date: 2009-10-7 22:44:30 ******/
CREATE TABLE [sysdiagrams] (
	[name] [sysname] NOT NULL ,
	[principal_id] [int] NOT NULL ,
	[diagram_id] [int] IDENTITY (1, 1) NOT NULL ,
	[version] [int] NULL ,
	[definition] [varbinary] (-1) NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[tag]    Script Date: 2009-10-7 22:44:30 ******/
CREATE TABLE [tag] (
	[Id] [int] IDENTITY (1, 1) NOT NULL ,
	[Name] [nvarchar] (100) COLLATE Chinese_PRC_CI_AS NOT NULL ,
	[Hits] [int] NOT NULL ,
	[AddDate] [datetime] NOT NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[type_group]    Script Date: 2009-10-7 22:44:30 ******/
CREATE TABLE [type_group] (
	[id] [int] IDENTITY (1, 1) NOT NULL ,
	[Name] [nvarchar] (200) COLLATE Chinese_PRC_CI_AS NULL 
) ON [PRIMARY]
GO


/****** Object:  Table [dbo].[user_login]    Script Date: 2009-10-7 22:44:30 ******/
CREATE TABLE [user_login] (
	[Id] [int] NOT NULL ,
	[UserName] [varbinary] (200) NULL ,
	[PassWord] [varbinary] (100) NULL ,
	[Email] [varbinary] (200) NULL ,
	[AddDate] [datetime] NULL 
) ON [PRIMARY]
GO


/* Data for table Accounts_PermissionCategories */
SET identity_insert [Accounts_PermissionCategories] on

INSERT [Accounts_PermissionCategories] ([CategoryID], [Description]) VALUES (1, '系统管理')
INSERT [Accounts_PermissionCategories] ([CategoryID], [Description]) VALUES (2, '新闻管理')
INSERT [Accounts_PermissionCategories] ([CategoryID], [Description]) VALUES (3, '主菜单显示控制')
INSERT [Accounts_PermissionCategories] ([CategoryID], [Description]) VALUES (4, '商品管理')
SET identity_insert [Accounts_PermissionCategories] off
GO
/* Data for table Accounts_Permissions */
SET identity_insert [Accounts_Permissions] on

INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (1, '帐户管理', 1, 'Accounts/UserAdmin.aspx')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (2, '菜单管理', 1, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (3, '用户管理', 1, 'Accounts/UserAdmin.aspx')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (4, '权限角色管理', 1, 'Accounts/RoleAdmin.aspx')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (5, '系统日志管理', 1, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (6, '系统管理菜单显示', 3, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (7, '新闻类别增加', 2, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (8, '新闻类别修改', 2, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (9, '新闻类别删除', 2, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (10, '新闻类别查询', 2, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (11, '新闻增加', 2, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (12, '新闻修改', 2, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (13, '新闻删除', 2, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (14, '新闻查询', 2, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (15, '图片管理', 2, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (16, '新闻类别', 3, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (17, '新闻管理', 3, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (18, '品牌管理', 3, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (19, '类别管理', 3, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (20, '商品管理', 3, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (21, '增加商品', 4, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (22, '修改商品', 4, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (23, '删除商品', 4, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (24, '其他技术代码', 3, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (25, '商品类别编辑', 4, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (26, '商品类别删除', 4, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (27, '商品类别查询', 4, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (28, '商品类别增加', 4, '')
INSERT [Accounts_Permissions] ([PermissionID], [Description], [CategoryID], [Url]) VALUES (29, '商品查询', 4, '')
SET identity_insert [Accounts_Permissions] off
GO
/* Data for table Accounts_RolePermissions */
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 2)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 4)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 5)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 3)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 1)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 11)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 15)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 14)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 10)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 9)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 8)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 7)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 13)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 12)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 19)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 18)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 24)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 20)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 6)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 17)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 16)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 23)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 29)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 25)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 27)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 26)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 28)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 22)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (1, 21)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (3, 15)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (3, 14)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (3, 10)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (3, 9)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (3, 8)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (3, 7)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (3, 13)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (3, 12)
INSERT [Accounts_RolePermissions] ([RoleID], [PermissionID]) VALUES (3, 11)
/* Data for table Accounts_Roles */
SET identity_insert [Accounts_Roles] on

INSERT [Accounts_Roles] ([RoleID], [Description]) VALUES (1, '系统管理员')
INSERT [Accounts_Roles] ([RoleID], [Description]) VALUES (2, '普通用户')
INSERT [Accounts_Roles] ([RoleID], [Description]) VALUES (3, '新闻编辑')
INSERT [Accounts_Roles] ([RoleID], [Description]) VALUES (4, '商品编辑')
SET identity_insert [Accounts_Roles] off
GO
/* Data for table Accounts_UserRoles */
INSERT [Accounts_UserRoles] ([UserID], [RoleID]) VALUES (1, 1)
INSERT [Accounts_UserRoles] ([UserID], [RoleID]) VALUES (3, 3)
INSERT [Accounts_UserRoles] ([UserID], [RoleID]) VALUES (2, 1)
/* Data for table Accounts_Users */
SET identity_insert [Accounts_Users] on

INSERT [Accounts_Users] ([UserID], [UserName], [Password], [TrueName], [Sex], [Phone], [Email], [EmployeeID], [DepartmentID], [Activity], [UserType], [Style]) VALUES (1, 'admin', 0xE91FE173F59B63D62A934CE1A010F2B114C1F3, 'Maticsoft', '男', '123456', 'admin@herosoft.com', 0, '-1', 1, 'AA', 1)
INSERT [Accounts_Users] ([UserID], [UserName], [Password], [TrueName], [Sex], [Phone], [Email], [EmployeeID], [DepartmentID], [Activity], [UserType], [Style]) VALUES (2, 'user', 0xE91FE173F59B63D62A934CE1A010F2B114C1F3, '普通用户', '男', '1232456', 'user@maticsoft.com', 0, '-1', 1, 'AA', 1)
INSERT [Accounts_Users] ([UserID], [UserName], [Password], [TrueName], [Sex], [Phone], [Email], [EmployeeID], [DepartmentID], [Activity], [UserType], [Style]) VALUES (3, 'yangfan', 0x6ED5833CF35286EBF8662B7B5949F0D742BBEC3F, 'yangfan', '男', '', '', 0, '-1', 1, 'AA', 1)
SET identity_insert [Accounts_Users] off
GO
/* Data for table comment */
SET identity_insert [comment] on

SET identity_insert [comment] off
GO
/* Data for table image */
SET identity_insert [image] on

SET identity_insert [image] off
GO
/* Data for table media */
SET identity_insert [media] on

SET identity_insert [media] off
GO
/* Data for table news */
SET identity_insert [news] on

INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (1, 'Test', 'test', 'test', '2009-10-5 0:49:07', NULL, 0, 1)
INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (2, 'test1', '1', NULL, '2009-10-5 0:55:38', NULL, 0, 1)
INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (3, 'test1', '1', NULL, '2009-10-5 0:55:41', NULL, 0, 1)
INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (4, 'test1', '1', NULL, '2009-10-5 0:55:41', NULL, 0, 1)
INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (5, 'test1', '1', NULL, '2009-10-5 0:55:42', NULL, 0, 1)
INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (6, 'test1', '1', NULL, '2009-10-5 0:55:42', NULL, 0, 1)
INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (7, 'test1', '1', NULL, '2009-10-5 0:55:42', NULL, 0, 1)
INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (8, 'test1', '1', NULL, '2009-10-5 0:55:42', NULL, 0, 1)
INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (9, 'test1', '1', NULL, '2009-10-5 0:55:43', NULL, 0, 1)
INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (10, 'test1', '1', NULL, '2009-10-5 0:55:43', NULL, 0, 1)
INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (11, 'test1', '1', NULL, '2009-10-5 0:55:43', NULL, 0, 1)
INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (12, 'test1', '1', NULL, '2009-10-5 0:55:43', NULL, 0, 1)
INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (13, 'test1', '1', NULL, '2009-10-5 0:55:43', NULL, 0, 1)
INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (14, 'test1', '1', NULL, '2009-10-5 0:55:43', NULL, 0, 1)
INSERT [news] ([Id], [Title], [Detail], [Preview], [AddDate], [NewType], [Publish], [Hits]) VALUES (15, 'test1', '1', NULL, '2009-10-5 0:58:26', NULL, 0, 1)
SET identity_insert [news] off
GO
/* Data for table news_tag */
SET identity_insert [news_tag] on

SET identity_insert [news_tag] off
GO
/* Data for table news_type */
SET identity_insert [news_type] on

SET identity_insert [news_type] off
GO
/* Data for table photo_album */
SET identity_insert [photo_album] on

SET identity_insert [photo_album] off
GO
/* Data for table sysdiagrams */
SET identity_insert [sysdiagrams] on

INSERT [sysdiagrams] ([name], [principal_id], [diagram_id], [version], [definition]) VALUES ('Diagram_0', 1, 1, 1, 
SET identity_insert [sysdiagrams] off
GO
/* Data for table tag */
SET identity_insert [tag] on

SET identity_insert [tag] off
GO
/* Data for table type_group */
SET identity_insert [type_group] on

SET identity_insert [type_group] off
GO
/* Data for table user_login */

/****** Object:  Table [dbo].[Accounts_Permissions]    Script Date: 2009-10-7 22:44:33 ******/
ALTER TABLE [Accounts_Permissions] WITH NOCHECK ADD 
	CONSTRAINT [DF_Accounts_Permissions_Url] DEFAULT ('') FOR [Url]
GO




/****** Object:  Table [dbo].[Accounts_UserRoles]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [Accounts_UserRoles] WITH NOCHECK ADD 
	CONSTRAINT [PK_Accounts_UserRoles] PRIMARY KEY  NONCLUSTERED 
	(
		[UserID]
	)  ON [PRIMARY] 
GO


/****** Object:  Table [dbo].[Accounts_Users]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [Accounts_Users] WITH NOCHECK ADD 
	CONSTRAINT [PK_Accounts_Users] PRIMARY KEY  NONCLUSTERED 
	(
		[UserName]
	)  ON [PRIMARY] 
GO


/****** Object:  Table [dbo].[comment]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [comment] WITH NOCHECK ADD 
	CONSTRAINT [DF_comment_AddDate] DEFAULT (getdate()) FOR [AddDate],
	CONSTRAINT [PK_comment] PRIMARY KEY  CLUSTERED 
	(
		[Id]
	)  ON [PRIMARY] 
GO


/****** Object:  Table [dbo].[image]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [image] WITH NOCHECK ADD 
	CONSTRAINT [DF_Image_AddDate] DEFAULT (getdate()) FOR [AddDate],
	CONSTRAINT [PK_Image] PRIMARY KEY  CLUSTERED 
	(
		[Id]
	)  ON [PRIMARY] 
GO


/****** Object:  Table [dbo].[media]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [media] WITH NOCHECK ADD 
	CONSTRAINT [DF_media_AddDate] DEFAULT (getdate()) FOR [AddDate],
	CONSTRAINT [PK_media] PRIMARY KEY  CLUSTERED 
	(
		[Id]
	)  ON [PRIMARY] 
GO


/****** Object:  Table [dbo].[news]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [news] WITH NOCHECK ADD 
	CONSTRAINT [DF_News_AddDate] DEFAULT (getdate()) FOR [AddDate],
	CONSTRAINT [DF_News_Publish] DEFAULT ((0)) FOR [Publish],
	CONSTRAINT [DF_news_Hits] DEFAULT ((0)) FOR [Hits],
	CONSTRAINT [PK_news] PRIMARY KEY  CLUSTERED 
	(
		[Id]
	)  ON [PRIMARY] 
GO


/****** Object:  Table [dbo].[news_tag]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [news_tag] WITH NOCHECK ADD 
	CONSTRAINT [DF_news_tag_AddDate] DEFAULT (getdate()) FOR [AddDate],
	CONSTRAINT [PK_news_tag] PRIMARY KEY  CLUSTERED 
	(
		[Id]
	)  ON [PRIMARY] 
GO


/****** Object:  Table [dbo].[news_type]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [news_type] WITH NOCHECK ADD 
	CONSTRAINT [DF_news_type_Parent] DEFAULT ((0)) FOR [Parent],
	CONSTRAINT [PK_news_type] PRIMARY KEY  CLUSTERED 
	(
		[Id]
	)  ON [PRIMARY] 
GO


/****** Object:  Table [dbo].[photo_album]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [photo_album] WITH NOCHECK ADD 
	CONSTRAINT [DF_photo_album_Publish] DEFAULT ((0)) FOR [Publish],
	CONSTRAINT [DF_photo_album_TotalCount] DEFAULT ((0)) FOR [TotalCount],
	CONSTRAINT [PK_photo_album] PRIMARY KEY  CLUSTERED 
	(
		[Id]
	)  ON [PRIMARY] 
GO


/****** Object:  Table [dbo].[sysdiagrams]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [sysdiagrams] WITH NOCHECK ADD 
	 PRIMARY KEY  CLUSTERED 
	(
		[diagram_id]
	)  ON [PRIMARY] 
GO


/****** Object:  Table [dbo].[tag]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [tag] WITH NOCHECK ADD 
	CONSTRAINT [DF_tags_view_count] DEFAULT ((0)) FOR [Hits],
	CONSTRAINT [DF_tags_add_date] DEFAULT (getdate()) FOR [AddDate],
	CONSTRAINT [PK_tags] PRIMARY KEY  CLUSTERED 
	(
		[Id]
	)  ON [PRIMARY] 
GO


/****** Object:  Table [dbo].[type_group]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [type_group] WITH NOCHECK ADD 
	CONSTRAINT [PK_type_group] PRIMARY KEY  CLUSTERED 
	(
		[id]
	)  ON [PRIMARY] 
GO


/****** Object:  Table [dbo].[user_login]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [user_login] WITH NOCHECK ADD 
	CONSTRAINT [PK_user_login] PRIMARY KEY  CLUSTERED 
	(
		[Id]
	)  ON [PRIMARY] 
GO








/****** Object:  Table [dbo].[comment]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [comment] ADD 
	CONSTRAINT [FK_comment_news] FOREIGN KEY 
	(
		[NewsId]
	) REFERENCES [news] (
		[Id]
	),
	CONSTRAINT [FK_comment_user_login] FOREIGN KEY 
	(
		[UserId]
	) REFERENCES [user_login] (
		[Id]
	)
GO


/****** Object:  Table [dbo].[image]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [image] ADD 
	CONSTRAINT [FK_Image_photo_album] FOREIGN KEY 
	(
		[AlbumId]
	) REFERENCES [photo_album] (
		[Id]
	)
GO


/****** Object:  Table [dbo].[media]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [media] ADD 
	CONSTRAINT [FK_media_news] FOREIGN KEY 
	(
		[NewsId]
	) REFERENCES [news] (
		[Id]
	)
GO


/****** Object:  Table [dbo].[news]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [news] ADD 
	CONSTRAINT [FK_news_news_type] FOREIGN KEY 
	(
		[NewType]
	) REFERENCES [news_type] (
		[Id]
	)
GO


/****** Object:  Table [dbo].[news_tag]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [news_tag] ADD 
	CONSTRAINT [FK_news_tag_news] FOREIGN KEY 
	(
		[NewsId]
	) REFERENCES [news] (
		[Id]
	),
	CONSTRAINT [FK_news_tag_tag] FOREIGN KEY 
	(
		[TagId]
	) REFERENCES [tag] (
		[Id]
	)
GO


/****** Object:  Table [dbo].[news_type]    Script Date: 2009-10-7 22:44:34 ******/
ALTER TABLE [news_type] ADD 
	CONSTRAINT [FK_news_type_type_group1] FOREIGN KEY 
	(
		[Type]
	) REFERENCES [type_group] (
		[id]
	)
GO




















/****** Object:  Table [dbo].[sysdiagrams]    Script Date: 2009-10-7 22:44:35 ******/
ALTER TABLE [sysdiagrams] ADD 
	CONSTRAINT [UK_principal_name] UNIQUE  NONCLUSTERED 
	(
		[principal_id],
		[name]
	)  ON [PRIMARY] 
GO






















SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_AddPermissionToRole    Script Date: 2009-10-7 22:44:35 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_AddPermissionToRole]
@RoleID int,
@PermissionID int
AS
	DECLARE @Count int

	SELECT @Count = Count(PermissionID) FROM Accounts_RolePermissions WHERE
		RoleID = @RoleID and PermissionID = @PermissionID
	
	IF @Count = 0
		INSERT INTO Accounts_RolePermissions(RoleID, PermissionID)
		VALUES(@RoleID, @PermissionID)








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_AddUserToRole    Script Date: 2009-10-7 22:44:35 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_AddUserToRole]
@UserID int,
@RoleID int
AS
	DECLARE @Count int
	
	SELECT @Count = Count(UserID) FROM Accounts_UserRoles WHERE
		RoleID = @RoleID AND UserID = @UserID

	IF @Count = 0
		INSERT INTO Accounts_UserRoles(UserID, RoleID)
		VALUES(@UserID, @RoleID)








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_ClearPermissionsFromRole    Script Date: 2009-10-7 22:44:35 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_ClearPermissionsFromRole]
@RoleID int
AS
	DELETE Accounts_RolePermissions WHERE RoleID = @RoleID








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_CreatePermission    Script Date: 2009-10-7 22:44:35 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_CreatePermission]
@CategoryID int,
@Description varchar(50)
AS
	INSERT INTO Accounts_Permissions(CategoryID,Description) VALUES(@CategoryID,@Description)
	RETURN @@IDENTITY






GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_CreatePermissionCategory    Script Date: 2009-10-7 22:44:35 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_CreatePermissionCategory]
@Description varchar(50)
AS
	INSERT INTO Accounts_PermissionCategories(Description) VALUES(@Description)
	RETURN @@IDENTITY






GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_CreateRole    Script Date: 2009-10-7 22:44:35 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_CreateRole]
@Description varchar(50)
AS
	INSERT INTO Accounts_Roles(Description) VALUES(@Description)
	RETURN @@IDENTITY








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_CreateUser    Script Date: 2009-10-7 22:44:35 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_CreateUser]
@UserName varchar(50),
@Password binary(20),
@TrueName varchar(50),
@Sex char(2),
@Phone varchar(20),
@Email varchar(100),
@EmployeeID int,
@DepartmentID varchar(15),
@Activity bit,
@UserType char(2),
@UserID int output,
@Style int
AS
	INSERT INTO Accounts_Users(UserName, Password, TrueName, Sex, Phone, Email,
		EmployeeID, DepartmentID, Activity, UserType,Style)
	VALUES(@UserName, @Password, @TrueName, @Sex, @Phone, @Email,
		@EmployeeID, @DepartmentID, @Activity, @UserType,@Style)
	
	SET @UserID = @@IDENTITY

	RETURN 1


GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_DeletePermission    Script Date: 2009-10-7 22:44:35 ******/





CREATE PROCEDURE [dbo].[sp_Accounts_DeletePermission]
@PermissionID int
AS
	BEGIN TRANSACTION
		DELETE Accounts_Permissions WHERE PermissionID = @PermissionID
		DELETE Accounts_RolePermissions WHERE PermissionID = @PermissionID
	COMMIT TRANSACTION






GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_DeletePermissionCategory    Script Date: 2009-10-7 22:44:35 ******/





CREATE PROCEDURE [dbo].[sp_Accounts_DeletePermissionCategory]
@CategoryID int
AS
	BEGIN TRANSACTION
		DELETE Accounts_Permissions WHERE CategoryID = @CategoryID
		DELETE Accounts_PermissionCategories WHERE CategoryID = @CategoryID
	COMMIT TRANSACTION






GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_DeleteRole    Script Date: 2009-10-7 22:44:36 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_DeleteRole]
@RoleID int
AS
	BEGIN TRANSACTION
		DELETE Accounts_RolePermissions WHERE RoleID = @RoleID
		DELETE Accounts_UserRoles WHERE RoleID = @RoleID
		DELETE Accounts_Roles WHERE RoleID = @RoleID
	COMMIT TRANSACTION








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_DeleteUser    Script Date: 2009-10-7 22:44:36 ******/






CREATE PROCEDURE [dbo].[sp_Accounts_DeleteUser]
@UserID int
AS
     DELETE Accounts_UserRoles WHERE UserId = @UserId
     DELETE ACcounts_Users WHERE UserId = @UserId







GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetAllRoles    Script Date: 2009-10-7 22:44:36 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_GetAllRoles]
AS
	SELECT RoleID, Description FROM Accounts_Roles ORDER BY Description ASC








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetEffectivePermissionList    Script Date: 2009-10-7 22:44:36 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_GetEffectivePermissionList]
@UserID int
AS
   SELECT DISTINCT Accounts_Permissions.Description FROM Accounts_RolePermissions
	 inner join Accounts_Permissions on 
	Accounts_RolePermissions.PermissionID=Accounts_Permissions.PermissionID WHERE RoleID IN
	(SELECT RoleID FROM Accounts_UserRoles WHERE UserID = @UserID)






GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetEffectivePermissionListID    Script Date: 2009-10-7 22:44:36 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_GetEffectivePermissionListID]
@UserID int
AS
   SELECT DISTINCT Accounts_Permissions.PermissionID FROM Accounts_RolePermissions
	 inner join Accounts_Permissions on 
	Accounts_RolePermissions.PermissionID=Accounts_Permissions.PermissionID WHERE RoleID IN
	(SELECT RoleID FROM Accounts_UserRoles WHERE UserID = @UserID)




GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetNoPermissionList    Script Date: 2009-10-7 22:44:36 ******/





CREATE PROCEDURE [dbo].[sp_Accounts_GetNoPermissionList]
@RoleID int = NULL
AS
	IF @RoleID IS NULL
		SELECT PermissionID, Description, CategoryID FROM Accounts_Permissions ORDER BY Description
	ELSE
		SELECT PermissionID, Description, CategoryID 
		FROM Accounts_Permissions
		where PermissionID not in(select PermissionID from Accounts_RolePermissions WHERE RoleID = @RoleID )
		ORDER BY Description






GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetPermissionCategories    Script Date: 2009-10-7 22:44:36 ******/






CREATE PROCEDURE [dbo].[sp_Accounts_GetPermissionCategories]
AS
	SELECT * FROM Accounts_PermissionCategories







GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetPermissionCategoryDetails    Script Date: 2009-10-7 22:44:36 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_GetPermissionCategoryDetails]
@CategoryID int
AS
	SELECT CategoryID, Description FROM Accounts_PermissionCategories WHERE CategoryID = @CategoryID








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetPermissionDetails    Script Date: 2009-10-7 22:44:36 ******/



CREATE PROCEDURE [dbo].[sp_Accounts_GetPermissionDetails]
@PermissionID int
AS
	SELECT * FROM Accounts_Permissions WHERE PermissionID = @PermissionID









GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetPermissionList    Script Date: 2009-10-7 22:44:36 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_GetPermissionList]
@RoleID int = NULL
AS
	IF @RoleID IS NULL
		SELECT PermissionID, Description, CategoryID FROM Accounts_Permissions ORDER BY Description
	ELSE
		SELECT ap.PermissionID, ap.Description, ap.CategoryID FROM Accounts_Permissions ap INNER JOIN
		Accounts_RolePermissions apr ON ap.PermissionID = apr.PermissionID WHERE
		apr.RoleID = @RoleID ORDER BY ap.Description








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetPermissionsInCategory    Script Date: 2009-10-7 22:44:36 ******/






CREATE PROCEDURE [dbo].[sp_Accounts_GetPermissionsInCategory]
@CategoryID int
AS
	SELECT * FROM Accounts_Permissions where CategoryID=@CategoryID ORDER BY Description




GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetRoleDetails    Script Date: 2009-10-7 22:44:36 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_GetRoleDetails]
@RoleID int
AS
	SELECT RoleID, Description FROM Accounts_Roles WHERE RoleID = @RoleID








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetUserDetails    Script Date: 2009-10-7 22:44:36 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_GetUserDetails]
@UserID int
AS
	SELECT * FROM Accounts_Users WHERE UserID = @UserID








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetUserDetailsByUserName    Script Date: 2009-10-7 22:44:36 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_GetUserDetailsByUserName]
@UserName varchar(50)
AS
	SELECT * FROM Accounts_Users WHERE UserName = @UserName








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetUserRoles    Script Date: 2009-10-7 22:44:37 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_GetUserRoles]
@UserID int
AS
	SELECT ur.RoleID, r.Description FROM Accounts_UserRoles ur
		INNER JOIN Accounts_Roles r ON ur.RoleID = r.RoleID  WHERE ur.UserID = @UserID








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetUsers    Script Date: 2009-10-7 22:44:37 ******/





CREATE PROCEDURE [dbo].[sp_Accounts_GetUsers]
@key varchar(50)
AS

SELECT * FROM Accounts_Users where TrueName like '%'+@key+'%' order by UserID




GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetUsersByDepart    Script Date: 2009-10-7 22:44:37 ******/


CREATE PROCEDURE [dbo].[sp_Accounts_GetUsersByDepart]
@DepartmentID varchar(50)
AS

SELECT * FROM Accounts_Users where DepartmentID = ''+@DepartmentID+'' order by UserID



GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetUsersByDepartUserType    Script Date: 2009-10-7 22:44:37 ******/
CREATE PROCEDURE [dbo].[sp_Accounts_GetUsersByDepartUserType]
@DepartmentID varchar(50),
@UserType varchar(2)
AS

SELECT * FROM Accounts_Users where DepartmentID = ''+@DepartmentID+'' and UserType = ''+@UserType+'' order by UserID




GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_GetUsersByType    Script Date: 2009-10-7 22:44:37 ******/
CREATE PROCEDURE [dbo].[sp_Accounts_GetUsersByType]
@UserType varchar(2),
@key varchar(50)
AS

SELECT * FROM Accounts_Users where UserType = ''+@UserType+'' and (UserName like '%'+@key+'%' or TrueName like '%'+@key+'%') order by UserID






GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_RemovePermissionFromRole    Script Date: 2009-10-7 22:44:37 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_RemovePermissionFromRole]
@RoleID int,
@PermissionID int
AS
	DELETE Accounts_RolePermissions WHERE RoleID = @RoleID and PermissionID = @PermissionID








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_RemoveUserFromRole    Script Date: 2009-10-7 22:44:37 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_RemoveUserFromRole]
@UserID int,
@RoleID int
AS
	DELETE Accounts_UserRoles WHERE UserID = @UserID AND RoleID = @RoleID








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_SetPassword    Script Date: 2009-10-7 22:44:37 ******/

CREATE PROCEDURE [dbo].[sp_Accounts_SetPassword]
@UserName varchar(50),
@EncryptedPassword binary(20)
AS

UPDATE Accounts_Users SET
Password = @EncryptedPassword
WHERE UserName = @UserName


GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_TestPassword    Script Date: 2009-10-7 22:44:37 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_TestPassword]
@UserID int,
@EncryptedPassword binary(20)
AS
     DECLARE @TempID int
     SELECT @TempID = UserID FROM Accounts_Users WHERE UserID = @UserID AND
	Password = @EncryptedPassword

     IF @TempID IS NULL
	RETURN 0
     ELSE
	RETURN 1








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_UpdatePermission    Script Date: 2009-10-7 22:44:37 ******/



CREATE PROCEDURE [dbo].[sp_Accounts_UpdatePermission]
@PermissionID int,
@Description varchar(50)
AS
	UPDATE Accounts_Permissions SET Description = @Description WHERE PermissionID = @PermissionID




GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_UpdateRole    Script Date: 2009-10-7 22:44:37 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_UpdateRole]
@RoleID int,
@Description varchar(50)
AS
	UPDATE Accounts_Roles SET Description = @Description WHERE RoleID = @RoleID








GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_UpdateUser    Script Date: 2009-10-7 22:44:37 ******/







CREATE PROCEDURE [dbo].[sp_Accounts_UpdateUser]
@UserName varchar(50),
@Password binary(20),
@TrueName varchar(50),
@Sex char(2),
@Phone varchar(20),
@Email varchar(100),
@EmployeeID int,
@DepartmentID varchar(15),
@Activity bit,
@UserType char(2),
@UserID int,
@Style int
AS
	UPDATE Accounts_Users SET
		UserName = @UserName,
		Password = @Password,
		TrueName = @TrueName,
		Sex = @Sex,
	Phone = @Phone,
		Email = @Email,
		EmployeeID = @EmployeeID,
		DepartmentID = @DepartmentID,
		Activity = @Activity,
		UserType = @UserType,
Style=@Style 
	WHERE UserID = @UserID


GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_Accounts_ValidateLogin    Script Date: 2009-10-7 22:44:37 ******/


CREATE PROCEDURE [dbo].[sp_Accounts_ValidateLogin]
@UserName varchar(50),
@EncryptedPassword binary(20)
AS
   DECLARE @UserID int

   SELECT @UserID = UserID FROM Accounts_Users WHERE UserName = @UserName
	AND Password = @EncryptedPassword
   
   IF @UserID = NULL   
	RETURN -1
   ELSE
	RETURN @UserID


GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_alterdiagram    Script Date: 2009-10-7 22:44:37 ******/

	CREATE PROCEDURE dbo.sp_alterdiagram
	(
		@diagramname 	sysname,
		@owner_id	int	= null,
		@version 	int,
		@definition 	varbinary(max)
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
	
		declare @theId 			int
		declare @retval 		int
		declare @IsDbo 			int
		
		declare @UIDFound 		int
		declare @DiagId			int
		declare @ShouldChangeUID	int
	
		if(@diagramname is null)
		begin
			RAISERROR ('Invalid ARG', 16, 1)
			return -1
		end
	
		execute as caller;
		select @theId = DATABASE_PRINCIPAL_ID();	 
		select @IsDbo = IS_MEMBER(N'db_owner'); 
		if(@owner_id is null)
			select @owner_id = @theId;
		revert;
	
		select @ShouldChangeUID = 0
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname 
		
		if(@DiagId IS NULL or (@IsDbo = 0 and @theId <> @UIDFound))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);
			return -3
		end
	
		if(@IsDbo <> 0)
		begin
			if(@UIDFound is null or USER_NAME(@UIDFound) is null) -- invalid principal_id
			begin
				select @ShouldChangeUID = 1 ;
			end
		end

		-- update dds data			
		update dbo.sysdiagrams set definition = @definition where diagram_id = @DiagId ;

		-- change owner
		if(@ShouldChangeUID = 1)
			update dbo.sysdiagrams set principal_id = @theId where diagram_id = @DiagId ;

		-- update dds version
		if(@version is not null)
			update dbo.sysdiagrams set version = @version where diagram_id = @DiagId ;

		return 0
	END
	
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_creatediagram    Script Date: 2009-10-7 22:44:38 ******/

	CREATE PROCEDURE dbo.sp_creatediagram
	(
		@diagramname 	sysname,
		@owner_id		int	= null, 	
		@version 		int,
		@definition 	varbinary(max)
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
	
		declare @theId int
		declare @retval int
		declare @IsDbo	int
		declare @userName sysname
		if(@version is null or @diagramname is null)
		begin
			RAISERROR (N'E_INVALIDARG', 16, 1);
			return -1
		end
	
		execute as caller;
		select @theId = DATABASE_PRINCIPAL_ID(); 
		select @IsDbo = IS_MEMBER(N'db_owner');
		revert; 
		
		if @owner_id is null
		begin
			select @owner_id = @theId;
		end
		else
		begin
			if @theId <> @owner_id
			begin
				if @IsDbo = 0
				begin
					RAISERROR (N'E_INVALIDARG', 16, 1);
					return -1
				end
				select @theId = @owner_id
			end
		end
		-- next 2 line only for test, will be removed after define name unique
		if EXISTS(select diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @diagramname)
		begin
			RAISERROR ('The name is already used.', 16, 1);
			return -2
		end
	
		insert into dbo.sysdiagrams(name, principal_id , version, definition)
				VALUES(@diagramname, @theId, @version, @definition) ;
		
		select @retval = @@IDENTITY 
		return @retval
	END
	
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_dropdiagram    Script Date: 2009-10-7 22:44:38 ******/

	CREATE PROCEDURE dbo.sp_dropdiagram
	(
		@diagramname 	sysname,
		@owner_id	int	= null
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
		declare @theId 			int
		declare @IsDbo 			int
		
		declare @UIDFound 		int
		declare @DiagId			int
	
		if(@diagramname is null)
		begin
			RAISERROR ('Invalid value', 16, 1);
			return -1
		end
	
		EXECUTE AS CALLER;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner'); 
		if(@owner_id is null)
			select @owner_id = @theId;
		REVERT; 
		
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname 
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)
			return -3
		end
	
		delete from dbo.sysdiagrams where diagram_id = @DiagId;
	
		return 0;
	END
	
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_getNewsByNewsId    Script Date: 2009-10-7 22:44:38 ******/
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[sp_getNewsByNewsId]
	-- Add the parameters for the stored procedure here
	@newsId int,
	@addHit smallint = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		begin 
			if @addhit > 0 
				update news set hits = hits + @addHit;
		end
	
	Select * 
		from news n  
		-- where n.id = @newsId;
END


GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_GetRecordByPage    Script Date: 2009-10-7 22:44:38 ******/

CREATE PROCEDURE [dbo].[sp_GetRecordByPage]
    @tblName      varchar(255),       -- 表名
    @fldName      varchar(255),       -- 字段名
    @PageSize     int = 10,           -- 页尺寸
    @PageIndex    int = 1,            -- 页码
    @IsReCount    bit = 0,            -- 返回记录总数, 非 0 值则返回
    @OrderType    bit = 0,            -- 设置排序类型, 非 0 值则降序
    @strWhere     varchar(1000) = ''  -- 查询条件 (注意: 不要加 where)
AS

declare @strSQL   varchar(6000)       -- 主语句
declare @strTmp   varchar(100)        -- 临时变量
declare @strOrder varchar(400)        -- 排序类型

if @OrderType != 0
begin
    set @strTmp = '<(select min'
    set @strOrder = ' order by [' + @fldName +'] desc'
end
else
begin
    set @strTmp = '>(select max'
    set @strOrder = ' order by [' + @fldName +'] asc'
end

set @strSQL = 'select top ' + str(@PageSize) + ' * from ['
    + @tblName + '] where [' + @fldName + ']' + @strTmp + '(['
    + @fldName + ']) from (select top ' + str((@PageIndex-1)*@PageSize) + ' ['
    + @fldName + '] from [' + @tblName + ']' + @strOrder + ') as tblTmp)'
    + @strOrder

if @strWhere != ''
    set @strSQL = 'select top ' + str(@PageSize) + ' * from ['
        + @tblName + '] where [' + @fldName + ']' + @strTmp + '(['
        + @fldName + ']) from (select top ' + str((@PageIndex-1)*@PageSize) + ' ['
        + @fldName + '] from [' + @tblName + '] where ' + @strWhere + ' '
        + @strOrder + ') as tblTmp) and ' + @strWhere + ' ' + @strOrder

if @PageIndex = 1
begin
    set @strTmp =''
    if @strWhere != ''
        set @strTmp = ' where ' + @strWhere

    set @strSQL = 'select top ' + str(@PageSize) + ' * from ['
        + @tblName + ']' + @strTmp + ' ' + @strOrder
end

if @IsReCount != 0
    set @strSQL = 'select count(*) as Total from [' + @tblName + ']'+' where ' + @strWhere

exec (@strSQL)





GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_GetRecordByPageOrder    Script Date: 2009-10-7 22:44:38 ******/



CREATE PROCEDURE [dbo].[sp_GetRecordByPageOrder]
 
 @tblName varchar(255),   -- 表名 
 @fldName varchar(255),   -- 显示字段名 
 @OrderfldName varchar(255),  -- 排序字段名 
 @StatfldName varchar(255),  -- 统计字段名 
 @PageSize int = 10,   -- 页尺寸 
 @PageIndex int = 1,   -- 页码 
 @IsReCount bit = 0,   -- 返回记录总数, 非 0 值则返回 
 @OrderType bit = 0,   -- 设置排序类型, 非 0 值则降序 
 @strWhere varchar(1000) = ''  -- 查询条件 (注意: 不要加 where) 
AS 

 declare @strSQL varchar(6000)  -- 主语句 
 declare @strTmp varchar(100)   -- 临时变量 
 declare @strOrder varchar(400)  -- 排序类型 

if @OrderType != 0 
 begin 
  set @strTmp = '<(select min' 
  set @strOrder = ' order by [' + @OrderfldName +'] desc' 
 end 
else 
 begin 
  set @strTmp = '>(select max' 
  set @strOrder = ' order by [' + @OrderfldName +'] asc' 
 end 

set @strSQL = 'select top ' + str(@PageSize) + ' ' + @fldName + ' from [' 
 + @tblName + '] where [' + @OrderfldName + ']' + @strTmp + '([' 
 + @OrderfldName + ']) from (select top ' + str((@PageIndex-1)*@PageSize) + ' [' 
 + @OrderfldName + '] from [' + @tblName + ']' + @strOrder + ') as tblTmp)' 
 + @strOrder 

if @strWhere != '' 
 set @strSQL = 'select top ' + str(@PageSize) + ' ' + @fldName + ' from [' 
 + @tblName + '] where [' + @OrderfldName + ']' + @strTmp + '([' 
 + @OrderfldName + ']) from (select top ' + str((@PageIndex-1)*@PageSize) + ' [' 
 + @OrderfldName + '] from [' + @tblName + '] where ' + @strWhere + ' ' 
 + @strOrder + ') as tblTmp) and ' + @strWhere + ' ' + @strOrder 

if @PageIndex = 1 
 begin 
  set @strTmp = '' 
  if @strWhere != '' 
  set @strTmp = ' where ' + @strWhere 

  set @strSQL = 'select top ' + str(@PageSize) + ' ' + @fldName + ' from [' 
  + @tblName + ']' + @strTmp + ' ' + @strOrder 
 end 


if @IsReCount != 0 
	set @strSQL = @strSQL+' select count(1) as Total from [' + @tblName + ']'

if @strWhere!=''
	set @strSQL = @strSQL+' where ' + @strWhere
exec (@strSQL) 




GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_getTagsByNewsId    Script Date: 2009-10-7 22:44:38 ******/
-- =============================================
-- Author:		<Yangfan>
-- Create date: <2009-09-28>
-- Description:	<Query Tags and Add Hits>
-- =============================================
CREATE PROCEDURE [dbo].[sp_getTagsByNewsId] 
	-- Add the parameters for the stored procedure here
	@newsId int,
	@addHit smallint = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	begin
		if @addHit  > 0 
			update tag set tag.hits = tag.hits + @addHit 
				where tag.Id in
				(select tagId from news_tag where NewsId = @newsId);
		 
	end
    -- Insert statements for procedure here
	SELECT t.id as TagId,t.Name as TagName, t.Hits as TagHits 
		from tag t left join news_tag n
		on t.id = n.tagId
		where n.NewsId = @newsId;
	return 1;
	set NOCOUNT OFF;
END




GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_helpdiagramdefinition    Script Date: 2009-10-7 22:44:38 ******/

	CREATE PROCEDURE dbo.sp_helpdiagramdefinition
	(
		@diagramname 	sysname,
		@owner_id	int	= null 		
	)
	WITH EXECUTE AS N'dbo'
	AS
	BEGIN
		set nocount on

		declare @theId 		int
		declare @IsDbo 		int
		declare @DiagId		int
		declare @UIDFound	int
	
		if(@diagramname is null)
		begin
			RAISERROR (N'E_INVALIDARG', 16, 1);
			return -1
		end
	
		execute as caller;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner');
		if(@owner_id is null)
			select @owner_id = @theId;
		revert; 
	
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname;
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId ))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);
			return -3
		end

		select version, definition FROM dbo.sysdiagrams where diagram_id = @DiagId ; 
		return 0
	END
	
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_helpdiagrams    Script Date: 2009-10-7 22:44:38 ******/

	CREATE PROCEDURE dbo.sp_helpdiagrams
	(
		@diagramname sysname = NULL,
		@owner_id int = NULL
	)
	WITH EXECUTE AS N'dbo'
	AS
	BEGIN
		DECLARE @user sysname
		DECLARE @dboLogin bit
		EXECUTE AS CALLER;
			SET @user = USER_NAME();
			SET @dboLogin = CONVERT(bit,IS_MEMBER('db_owner'));
		REVERT;
		SELECT
			[Database] = DB_NAME(),
			[Name] = name,
			[ID] = diagram_id,
			[Owner] = USER_NAME(principal_id),
			[OwnerID] = principal_id
		FROM
			sysdiagrams
		WHERE
			(@dboLogin = 1 OR USER_NAME(principal_id) = @user) AND
			(@diagramname IS NULL OR name = @diagramname) AND
			(@owner_id IS NULL OR principal_id = @owner_id)
		ORDER BY
			4, 5, 1
	END
	
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_pagination    Script Date: 2009-10-7 22:44:38 ******/


CREATE   PROCEDURE   sp_pagination 
( 
@Tables   varchar(1000), 
@PK   varchar(100), 
@Sort   varchar(200)   =   NULL, 
@PageNumber   int   =   1, 
@PageSize   int   =   10, 
@Fields   varchar(1000)   =   '* ', 
@Filter   varchar(1000)   =   NULL, 
@Group   varchar(1000)   =   NULL,
@totalCount int out
)
AS 

/*Default   Sorting*/ 
IF   @Sort   IS   NULL   OR   @Sort   =   ' ' 
SET   @Sort   =   @PK 

/*Find   the   @PK   type*/ 
DECLARE   @SortTable   varchar(100) 
DECLARE   @SortName   varchar(100) 
DECLARE   @strSortColumn   varchar(200) 
DECLARE   @operator   char(2) 
DECLARE   @type   varchar(100) 
DECLARE   @prec   int 

/*Set   sorting   variables.*/ 
/*CHARINDEX( 'DESC ',@Sort)返回DESC在@Sort表达式中的起点位置，返回int*/ 
/*如果   @Sort中出现 'DESC '则用空字符替换掉并使@operator= ' <= '*/ 
IF   CHARINDEX( 'DESC ',@Sort)> 0   
BEGIN 
SET   @strSortColumn   =   REPLACE(@Sort,   'DESC ',   ' ') 
SET   @operator   =   ' <= ' 
END 
ELSE 
BEGIN 
IF   CHARINDEX( 'ASC ',   @Sort)   =   0 
SET   @strSortColumn   =   REPLACE(@Sort,   'ASC ',   ' ') 
SET   @operator   =   '> = ' 
END 

/*   返回表达式中点号的右边,即字段名*/ 
IF   CHARINDEX( '. ',   @strSortColumn)   >   0 
BEGIN 
SET   @SortTable   =   SUBSTRING(@strSortColumn,   0,   CHARINDEX( '. ',@strSortColumn)) 
SET   @SortName   =   SUBSTRING(@strSortColumn,   CHARINDEX( '. ',@strSortColumn)   +   1,   LEN(@strSortColumn)) 
END 
ELSE 
BEGIN 
SET   @SortTable   =   @Tables 
SET   @SortName   =   @strSortColumn 
END 

/* 
t   =   systypes表   
c   =   syscolumns表   
o   =   sysobjects表   
sysobjects   o   =   sysobjects   as   o   
*/ 
SELECT   @type=t.name,   @prec=c.prec 
FROM   sysobjects   o   
JOIN   syscolumns   c   on   o.id=c.id 
JOIN   systypes   t   on   c.xusertype=t.xusertype 
WHERE   o.name   =   @SortTable   AND   c.name   =   @SortName 

IF   CHARINDEX( 'char ',   @type)   >   0 
      SET   @type   =   @type   +   '( '   +   CAST(@prec   AS   varchar)   +   ') ' 

DECLARE   @strPageSize   varchar(50) 
DECLARE   @strStartRow   varchar(50) 
DECLARE   @strFilter   varchar(1000) 
DECLARE   @strSimpleFilter   varchar(1000) 
DECLARE   @strGroup   varchar(1000) 

/*Default   Page   Number*/ 
IF   @PageNumber   <   1 
SET   @PageNumber   =   1 

/*Set   paging   variables.*/ 
/*将@strPageSize   转化为字符型*/ 
/*CAST()   通过表达式转化数据类型自定义转化*/ 
SET   @strPageSize   =   CAST(@PageSize   AS   varchar(50)) 
SET   @strStartRow   =   CAST(((@PageNumber   -   1)*@PageSize   +   1)   AS   varchar(50)) 

/*Set   filter   &   group   variables.*/ 
/*条件如果为空加where，否则加and*/ 
IF   @Filter   IS   NOT   NULL   AND   @Filter   !=   ' ' 
BEGIN 
SET   @strFilter   =   '   WHERE   '   +   @Filter   +   '   ' 
SET   @strSimpleFilter   =   '   AND   '   +   @Filter   +   '   ' 
END 
ELSE 
BEGIN 
SET   @strSimpleFilter   =   ' ' 
SET   @strFilter   =   ' ' 
END 
IF   @Group   IS   NOT   NULL   AND   @Group   !=   ' ' 
SET   @strGroup   =   '   GROUP   BY   '   +   @Group   +   '   ' 
ELSE 
SET   @strGroup   =   ' ' 

/*Execute   dynamic   query*/ 
EXEC( 
' 
DECLARE   @SortColumn   '   +   @type   +   ' 
SET   ROWCOUNT   '   +   @strStartRow   +   ' 
SELECT   @SortColumn= '   +   @strSortColumn   +   '   FROM   '   +   @Tables   +   @strFilter   +   '   '   +   @strGroup   +   '   ORDER   BY   '   +   @Sort   +   ' 

SET   ROWCOUNT   '   +   @strPageSize   +   ' 
SELECT   '   +   @Fields   +   '   FROM   '   +   @Tables   +   '   WHERE   '   +   @strSortColumn   +   @operator   +   '   @SortColumn   '   +   @strSimpleFilter   +   '   '   +   @strGroup   +   '   ORDER   BY   '   +   @Sort   +   ' 


' 
) 
SET @totalCount=@@ROWCOUNT


GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_renamediagram    Script Date: 2009-10-7 22:44:38 ******/

	CREATE PROCEDURE dbo.sp_renamediagram
	(
		@diagramname 		sysname,
		@owner_id		int	= null,
		@new_diagramname	sysname
	
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
		declare @theId 			int
		declare @IsDbo 			int
		
		declare @UIDFound 		int
		declare @DiagId			int
		declare @DiagIdTarg		int
		declare @u_name			sysname
		if((@diagramname is null) or (@new_diagramname is null))
		begin
			RAISERROR ('Invalid value', 16, 1);
			return -1
		end
	
		EXECUTE AS CALLER;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner'); 
		if(@owner_id is null)
			select @owner_id = @theId;
		REVERT;
	
		select @u_name = USER_NAME(@owner_id)
	
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname 
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)
			return -3
		end
	
		-- if((@u_name is not null) and (@new_diagramname = @diagramname))	-- nothing will change
		--	return 0;
	
		if(@u_name is null)
			select @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @new_diagramname
		else
			select @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @owner_id and name = @new_diagramname
	
		if((@DiagIdTarg is not null) and  @DiagId <> @DiagIdTarg)
		begin
			RAISERROR ('The name is already used.', 16, 1);
			return -2
		end		
	
		if(@u_name is null)
			update dbo.sysdiagrams set [name] = @new_diagramname, principal_id = @theId where diagram_id = @DiagId
		else
			update dbo.sysdiagrams set [name] = @new_diagramname where diagram_id = @DiagId
		return 0
	END
	
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.sp_upgraddiagrams    Script Date: 2009-10-7 22:44:38 ******/

	CREATE PROCEDURE dbo.sp_upgraddiagrams
	AS
	BEGIN
		IF OBJECT_ID(N'dbo.sysdiagrams') IS NOT NULL
			return 0;
	
		CREATE TABLE dbo.sysdiagrams
		(
			name sysname NOT NULL,
			principal_id int NOT NULL,	-- we may change it to varbinary(85)
			diagram_id int PRIMARY KEY IDENTITY,
			version int,
	
			definition varbinary(max)
			CONSTRAINT UK_principal_name UNIQUE
			(
				principal_id,
				name
			)
		);


		/* Add this if we need to have some form of extended properties for diagrams */
		/*
		IF OBJECT_ID(N'dbo.sysdiagram_properties') IS NULL
		BEGIN
			CREATE TABLE dbo.sysdiagram_properties
			(
				diagram_id int,
				name sysname,
				value varbinary(max) NOT NULL
			)
		END
		*/

		IF OBJECT_ID(N'dbo.dtproperties') IS NOT NULL
		begin
			insert into dbo.sysdiagrams
			(
				[name],
				[principal_id],
				[version],
				[definition]
			)
			select	 
				convert(sysname, dgnm.[uvalue]),
				DATABASE_PRINCIPAL_ID(N'dbo'),			-- will change to the sid of sa
				0,							-- zero for old format, dgdef.[version],
				dgdef.[lvalue]
			from dbo.[dtproperties] dgnm
				inner join dbo.[dtproperties] dggd on dggd.[property] = 'DtgSchemaGUID' and dggd.[objectid] = dgnm.[objectid]	
				inner join dbo.[dtproperties] dgdef on dgdef.[property] = 'DtgSchemaDATA' and dgdef.[objectid] = dgnm.[objectid]
				
			where dgnm.[property] = 'DtgSchemaNAME' and dggd.[uvalue] like N'_EA3E6268-D998-11CE-9454-00AA00A3F36E_' 
			return 2;
		end
		return 1;
	END
	
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.UP_P_Category_Delete    Script Date: 2009-10-7 22:44:38 ******/
CREATE PROCEDURE [dbo].[UP_P_Category_Delete]
@CategoryId varchar
 AS 
	DELETE P_Category
	 WHERE [CategoryId] = @CategoryId



GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/****** Object:  Stored Procedure dbo.UP_P_Category_Delete1    Script Date: 2009-10-7 22:44:38 ******/
CREATE PROCEDURE [dbo].[UP_P_Category_Delete1]
@CategoryId varchar (20)
 AS 
	DELETE P_Category
	 WHERE [CategoryId] = @CategoryId


GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

